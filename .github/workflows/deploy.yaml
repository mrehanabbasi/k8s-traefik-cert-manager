name: Deply to k8s cluster

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Replace Traefik password
        uses: richardrigutins/replace-in-files@v2
        with:
          files: '**/*.yaml'
          search-text: 'HASHED_USERNAME_PASSWORD'
          replacement-text: ${{ secrets.TRAEFIK_HASHED_ENCODED_CREDS }}
          exclude: '*.sh'
          encoding: 'utf8'
          max-parallelism: 10

      - name: Replace base domain
        uses: richardrigutins/replace-in-files@v2
        with:
          files: '**/*.yaml'
          search-text: 'domain.tld'
          replacement-text: ${{ secrets.BASE_DOMAIN }}
          exclude: '*.sh'
          encoding: 'utf8'
          max-parallelism: 10

      - name: Replace TLS secret name prod
        uses: richardrigutins/replace-in-files@v2
        with:
          files: '**/*.yaml'
          search-text: 'TLS_SECRET_NAME'
          replacement-text: ${{ secrets.TLS_PROD_SECRET_NAME }}
          exclude: '*.sh'
          encoding: 'utf8'
          max-parallelism: 10

      - name: Replace TLS secret name staging
        uses: richardrigutins/replace-in-files@v2
        with:
          files: '**/*.yaml'
          search-text: 'TLS_STAGING_SECRET_NAME'
          replacement-text: ${{ secrets.TLS_STAGING_SECRET_NAME }}
          exclude: '*.sh'
          encoding: 'utf8'
          max-parallelism: 10

      - name: Replace email
        uses: richardrigutins/replace-in-files@v2
        with:
          files: '**/*.yaml'
          search-text: 'CF_EMAIL'
          replacement-text: ${{ secrets.EMAIL }}
          exclude: '*.sh'
          encoding: 'utf8'
          max-parallelism: 10

      - name: Replace production certificate name
        uses: richardrigutins/replace-in-files@v2
        with:
          files: '**/*.yaml'
          search-text: 'CERTIFICATE_NAME_PROD'
          replacement-text: ${{ secrets.CERTIFICATE_NAME_PROD }}
          exclude: '*.sh'
          encoding: 'utf8'
          max-parallelism: 10

      - name: Replace staging certificate name
        uses: richardrigutins/replace-in-files@v2
        with:
          files: '**/*.yaml'
          search-text: 'CERTIFICATE_NAME_STAGING'
          replacement-text: ${{ secrets.CERTIFICATE_NAME_STAGING }}
          exclude: '*.sh'
          encoding: 'utf8'
          max-parallelism: 10

      - uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      - name: Configure kubeconfig
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Set up helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: latest

      - name: Add helm repos
        run: |
          helm repo add --force-update traefik https://helm.traefik.io/traefik
          helm repo add --force-update emberstack https://emberstack.github.io/helm-charts
          helm repo add --force-update jetstack https://charts.jetstack.io
          helm repo update

      - name: Deploy Traefik
        run: |
          helm upgrade --install --namespace=traefik --create-namespace traefik traefik/traefik -f traefik/values.yaml

      - name: Deploy Traefik dashboard
        uses: Azure/k8s-deploy@v5
        with:
          # resource-group: yourResourceGroup
          name: ${{ secrets.CLUSTER_NAME }}
          action: deploy
          strategy: basic
          namespace: traefik

          # private-cluster: true
          manifests: |
            traefik/dashboard/secret-dashboard.yaml
            traefik/dashboard/default-headers.yaml
            traefik/dashboard/middleware.yaml
            traefik/dashboard/ingress.yaml

      - name: Deploy cert-manager
        run: |
          helm upgrade --install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --values cert-manager/values.yaml --version v1.16.1

      - name: Deploy issuers
        uses: Azure/k8s-deploy@v5
        with:
          # resource-group: yourResourceGroup
          name: ${{ secrets.CLUSTER_NAME }}
          action: deploy
          strategy: basic
          namespace: cert-manager

          # private-cluster: true
          manifests: |
            cert-manager/issuers/secret-cf-token.yaml
            cert-manager/issuers/letsencrypt-staging.yaml
            cert-manager/issuers/letsencrypt-production.yaml

      - name: Install reflector
        run: |
          helm upgrade --install reflector emberstack/reflector

      - name: Deploy certificates
        uses: Azure/k8s-deploy@v5
        with:
          # resource-group: yourResourceGroup
          name: ${{ secrets.CLUSTER_NAME }}
          action: deploy
          strategy: basic
          namespace: cert-manager

          # private-cluster: true
          manifests: |
            cert-manager/certificates/staging/local-example-com.yaml
            cert-manager/certificates/production/local-example-com.yaml
